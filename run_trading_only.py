"""–ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –∑–∞–¥–∞—á –±–µ–∑ –±–æ—Ç–∞."""
import asyncio
import logging

from config.constants import COINS
from config.settings import settings
from database.connection import db
from trading.celery_worker import start_master_trading

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)


async def main() -> None:
    """–ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ —Ç–æ—Ä–≥–æ–≤–ª–∏."""
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
        logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î")
        await db.init_db()
        logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞")
        
        # –ó–∞–ø—É—Å–∫ —Ç–æ—Ä–≥–æ–≤–ª–∏
        logger.info("üéØ –ó–∞–ø—É—Å–∫ —Ç–æ—Ä–≥–æ–≤—ã—Ö –∑–∞–¥–∞—á")
        deposit_per_coin = 100.0
        
        start_master_trading.delay(
            api_key=settings.TRADER_API_KEY,
            api_secret=settings.TRADER_API_SECRET,
            api_passphrase=settings.TRADER_API_PASSPHRASE,
            deposit_per_coin=deposit_per_coin
        )
        
        logger.info(f"‚úÖ –ó–∞–ø—É—â–µ–Ω–æ {len(COINS)} —Ç–æ—Ä–≥–æ–≤—ã—Ö –º–æ–Ω–µ—Ç")
        logger.info("üîÑ –¢–æ—Ä–≥–æ–≤–ª—è –∑–∞–ø—É—â–µ–Ω–∞, –º–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å")
        
        # –î–µ—Ä–∂–∏–º –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–¥–∞—á
        await asyncio.sleep(5)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        raise


if __name__ == "__main__":
    asyncio.run(main())


